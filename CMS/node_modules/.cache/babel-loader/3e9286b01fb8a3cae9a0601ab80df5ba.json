{"ast":null,"code":"var _jsxFileName = \"/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Question/pages/Create.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, FormControl, FormHelperText, InputLabel, MenuItem, Select, Stack, TextField, Typography } from '@material-ui/core';\nimport questionApi from 'apis/questionApi';\nimport topicApi from 'apis/topicApi';\nimport Page from 'components/Page';\nimport { STATUS_LIST } from 'constants/index';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateQuestion = () => {\n  _s();\n\n  const [topicList, setTopicList] = useState([]);\n  const QuestionSchema = Yup.object().shape({\n    question: Yup.string().required('Vui lòng nhập câu hỏi'),\n    answerA: Yup.string().required('Vui lòng nhập đáp án A'),\n    answerB: Yup.string().required('Vui lòng nhập đáp án B'),\n    answerC: Yup.string().required('Vui lòng nhập đáp án C'),\n    answerD: Yup.string().required('Vui lòng nhập đáp án D'),\n    topic: Yup.string().required('Vui lòng chọn đề thi'),\n    status: Yup.string().required('Vui lòng chọn trạng thái câu hỏi ')\n  });\n  const formik = useFormik({\n    initialValues: {\n      question: '',\n      answerA: '',\n      answerB: '',\n      answerC: '',\n      answerD: '',\n      topic: '',\n      status: ''\n    },\n    validationSchema: QuestionSchema,\n    onSubmit: async values => {\n      const {\n        question,\n        answerA,\n        answerB,\n        answerC,\n        answerD,\n        topic,\n        status\n      } = values;\n      const newQuestion = {\n        title: question,\n        answer: [{\n          title: answerA\n        }, {\n          title: answerB\n        }, {\n          title: answerC\n        }, {\n          title: answerD\n        }],\n        topic,\n        status\n      };\n\n      try {\n        await questionApi.create(newQuestion);\n        toast.success('Tạo câu hỏi thành công');\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    }\n  });\n  const {\n    handleSubmit,\n    touched,\n    errors,\n    getFieldProps,\n    values\n  } = formik;\n  useEffect(() => {\n    const fetchTopicList = async () => {\n      try {\n        const res = await topicApi.getList();\n        console.log(res.data.topic);\n        setTopicList(res.data.topic);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchTopicList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      title: \"T\\u1EA1o c\\xE2u h\\u1ECFi | CMS\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"2xl\",\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          mb: 5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"T\\u1EA1o c\\xE2u h\\u1ECFi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: RouterLink,\n            to: \"/dashboard/question\",\n            children: \"Danh s\\xE1ch c\\xE2u h\\u1ECFi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n          value: formik,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                autoComplete: \"question\",\n                type: \"text\",\n                label: \"C\\xE2u h\\u1ECFi\",\n                ...getFieldProps('question'),\n                error: Boolean(touched.question && errors.question),\n                helperText: touched.question && errors.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                autoComplete: \"answerA\",\n                type: \"text\",\n                label: \"\\u0110\\xE1p \\xE1n A\",\n                ...getFieldProps('answerA'),\n                error: Boolean(touched.answerA && errors.answerA),\n                helperText: touched.answerA && errors.answerA\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                autoComplete: \"answerB\",\n                type: \"text\",\n                label: \"\\u0110\\xE1p \\xE1n B\",\n                ...getFieldProps('answerB'),\n                error: Boolean(touched.answerB && errors.answerB),\n                helperText: touched.answerB && errors.answerB\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                autoComplete: \"answerC\",\n                type: \"text\",\n                label: \"\\u0110\\xE1p \\xE1n C\",\n                ...getFieldProps('answerC'),\n                error: Boolean(touched.answerC && errors.answerC),\n                helperText: touched.answerC && errors.answerC\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                autoComplete: \"answerD\",\n                type: \"text\",\n                label: \"\\u0110\\xE1p \\xE1n D\",\n                ...getFieldProps('answerD'),\n                error: Boolean(touched.answerD && errors.answerD),\n                helperText: touched.answerD && errors.answerD\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"status\",\n                  children: \"Tr\\u1EA1ng th\\xE1i\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"status\",\n                  id: \"status\",\n                  defaultValue: values.status,\n                  label: \"Tr\\u1EA1ng th\\xE1i\",\n                  ...getFieldProps('status'),\n                  error: Boolean(touched.status && errors.status),\n                  children: STATUS_LIST.map((status, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: status.value,\n                    children: status.lable\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), Boolean(touched.status && errors.status) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: Boolean(touched.status && errors.status),\n                  children: touched.status && errors.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"topic\",\n                  children: \"\\u0110\\u1EC1 thi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"topic\",\n                  id: \"topic\",\n                  defaultValue: values.topic,\n                  label: \"Danh m\\u1EE5c\",\n                  ...getFieldProps('topic'),\n                  error: Boolean(touched.topic && errors.topic),\n                  children: topicList.map((topic, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: topic._id,\n                    children: topic.name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), Boolean(touched.topic && errors.topic) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: Boolean(touched.topic && errors.topic),\n                  children: touched.topic && errors.topic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              size: \"large\",\n              type: \"submit\",\n              children: \"T\\u1EA1o c\\xE2u h\\u1ECFi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateQuestion, \"Qth4U/E+roKEMuZgH826Og6ecbI=\", false, function () {\n  return [useFormik];\n});\n\n_c = CreateQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateQuestion\");","map":{"version":3,"sources":["/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Question/pages/Create.js"],"names":["Button","Container","FormControl","FormHelperText","InputLabel","MenuItem","Select","Stack","TextField","Typography","questionApi","topicApi","Page","STATUS_LIST","Form","FormikProvider","useFormik","React","useEffect","useState","Link","RouterLink","toast","Yup","CreateQuestion","topicList","setTopicList","QuestionSchema","object","shape","question","string","required","answerA","answerB","answerC","answerD","topic","status","formik","initialValues","validationSchema","onSubmit","values","newQuestion","title","answer","create","success","error","response","data","handleSubmit","touched","errors","getFieldProps","fetchTopicList","res","getList","console","log","Boolean","map","index","value","lable","_id","name"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport questionApi from 'apis/questionApi';\nimport topicApi from 'apis/topicApi';\nimport Page from 'components/Page';\nimport { STATUS_LIST } from 'constants/index';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\n\nexport const CreateQuestion = () => {\n  const [topicList, setTopicList] = useState([]);\n\n  const QuestionSchema = Yup.object().shape({\n    question: Yup.string().required('Vui lòng nhập câu hỏi'),\n    answerA: Yup.string().required('Vui lòng nhập đáp án A'),\n    answerB: Yup.string().required('Vui lòng nhập đáp án B'),\n    answerC: Yup.string().required('Vui lòng nhập đáp án C'),\n    answerD: Yup.string().required('Vui lòng nhập đáp án D'),\n    topic: Yup.string().required('Vui lòng chọn đề thi'),\n    status: Yup.string().required('Vui lòng chọn trạng thái câu hỏi ')\n  });\n  const formik = useFormik({\n    initialValues: {\n      question: '',\n      answerA: '',\n      answerB: '',\n      answerC: '',\n      answerD: '',\n      topic: '',\n      status: ''\n    },\n    validationSchema: QuestionSchema,\n    onSubmit: async (values) => {\n      const { question, answerA, answerB, answerC, answerD, topic, status } = values;\n      const newQuestion = {\n        title: question,\n        answer: [{ title: answerA }, { title: answerB }, { title: answerC }, { title: answerD }],\n        topic,\n        status\n      };\n      try {\n        await questionApi.create(newQuestion);\n        toast.success('Tạo câu hỏi thành công');\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    }\n  });\n  const { handleSubmit, touched, errors, getFieldProps, values } = formik;\n\n  useEffect(() => {\n    const fetchTopicList = async () => {\n      try {\n        const res = await topicApi.getList();\n        console.log(res.data.topic);\n        setTopicList(res.data.topic);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTopicList();\n  }, []);\n  return (\n    <>\n      <Page title=\"Tạo câu hỏi | CMS\">\n        <Container maxWidth=\"2xl\">\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n            <Typography variant=\"h4\" gutterBottom>\n              Tạo câu hỏi\n            </Typography>\n            <Button variant=\"contained\" component={RouterLink} to=\"/dashboard/question\">\n              Danh sách câu hỏi\n            </Button>\n          </Stack>\n          <FormikProvider value={formik}>\n            <Form onSubmit={handleSubmit}>\n              <Stack mb={3}>\n                <TextField\n                  fullWidth\n                  autoComplete=\"question\"\n                  type=\"text\"\n                  label=\"Câu hỏi\"\n                  {...getFieldProps('question')}\n                  error={Boolean(touched.question && errors.question)}\n                  helperText={touched.question && errors.question}\n                />\n              </Stack>\n              <Stack mb={3}>\n                <TextField\n                  fullWidth\n                  autoComplete=\"answerA\"\n                  type=\"text\"\n                  label=\"Đáp án A\"\n                  {...getFieldProps('answerA')}\n                  error={Boolean(touched.answerA && errors.answerA)}\n                  helperText={touched.answerA && errors.answerA}\n                />\n              </Stack>\n              <Stack mb={3}>\n                <TextField\n                  fullWidth\n                  autoComplete=\"answerB\"\n                  type=\"text\"\n                  label=\"Đáp án B\"\n                  {...getFieldProps('answerB')}\n                  error={Boolean(touched.answerB && errors.answerB)}\n                  helperText={touched.answerB && errors.answerB}\n                />\n              </Stack>\n              <Stack mb={3}>\n                <TextField\n                  fullWidth\n                  autoComplete=\"answerC\"\n                  type=\"text\"\n                  label=\"Đáp án C\"\n                  {...getFieldProps('answerC')}\n                  error={Boolean(touched.answerC && errors.answerC)}\n                  helperText={touched.answerC && errors.answerC}\n                />\n              </Stack>\n              <Stack mb={3}>\n                <TextField\n                  fullWidth\n                  autoComplete=\"answerD\"\n                  type=\"text\"\n                  label=\"Đáp án D\"\n                  {...getFieldProps('answerD')}\n                  error={Boolean(touched.answerD && errors.answerD)}\n                  helperText={touched.answerD && errors.answerD}\n                />\n              </Stack>\n              <Stack mb={3}>\n                <FormControl variant=\"outlined\">\n                  <InputLabel id=\"status\">Trạng thái</InputLabel>\n                  <Select\n                    labelId=\"status\"\n                    id=\"status\"\n                    defaultValue={values.status}\n                    label=\"Trạng thái\"\n                    {...getFieldProps('status')}\n                    error={Boolean(touched.status && errors.status)}\n                  >\n                    {STATUS_LIST.map((status, index) => (\n                      <MenuItem value={status.value} key={index}>\n                        {status.lable}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {Boolean(touched.status && errors.status) && (\n                    <FormHelperText error={Boolean(touched.status && errors.status)}>\n                      {touched.status && errors.status}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Stack>\n              <Stack mb={3}>\n                <FormControl variant=\"outlined\">\n                  <InputLabel id=\"topic\">Đề thi</InputLabel>\n                  <Select\n                    labelId=\"topic\"\n                    id=\"topic\"\n                    defaultValue={values.topic}\n                    label=\"Danh mục\"\n                    {...getFieldProps('topic')}\n                    error={Boolean(touched.topic && errors.topic)}\n                  >\n                    {topicList.map((topic, index) => (\n                      <MenuItem key={index} value={topic._id}>\n                        {topic.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {Boolean(touched.topic && errors.topic) && (\n                    <FormHelperText error={Boolean(touched.topic && errors.topic)}>\n                      {touched.topic && errors.topic}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Stack>\n              <Button variant=\"contained\" size=\"large\" type=\"submit\">\n                Tạo câu hỏi\n              </Button>\n            </Form>\n          </FormikProvider>\n        </Container>\n      </Page>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}