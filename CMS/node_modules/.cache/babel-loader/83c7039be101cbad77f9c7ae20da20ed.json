{"ast":null,"code":"var _jsxFileName = \"/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Topic/pages/Edit.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, FormControl, FormHelperText, InputLabel, MenuItem, Select, Stack, TextField, Typography } from '@material-ui/core';\nimport categoryApi from 'apis/categoryApi';\nimport topicApi from 'apis/topicApi';\nimport Page from 'components/Page';\nimport { STATUS_LIST } from 'constants/index';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink, useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditTopic = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [categoryList, setCategoryList] = useState([]);\n  const TopicSchema = Yup.object().shape({\n    name: Yup.string().required('Vui lòng nhập tên đề thi').min(4, 'Tên đề thi chứa ít nhất 4 kí tư'),\n    time: Yup.number('Vui long nhap dung ding dang').required('Vui lòng nhập thời gian làm bài'),\n    total: Yup.number('Vui long nhap dung ding dang').required('Vui lòng nhập tổng số câu của bài thi'),\n    categoryId: Yup.string().required('Vui lòng chọn danh mục'),\n    status: Yup.string().required('Vui lòng chọn trạng thái đề thi')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      time: 0,\n      total: 0,\n      categoryId: '',\n      status: ''\n    },\n    validationSchema: TopicSchema,\n    onSubmit: async values => {\n      try {\n        await topicApi.update(id, values);\n        toast.success('Sua de thi thanh cong');\n        history.push('/dashboard/topic');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  });\n  const {\n    handleSubmit,\n    touched,\n    errors,\n    getFieldProps,\n    setFieldValue\n  } = formik;\n  useEffect(() => {\n    const fetchListCategory = async () => {\n      try {\n        const res = await categoryApi.getList();\n        setCategoryList(res.data.categoryList);\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    };\n\n    fetchListCategory();\n  }, []);\n  useEffect(() => {\n    const fetchTopic = async () => {\n      try {\n        const res = await topicApi.getById(id);\n        const {\n          topic\n        } = res.data;\n        console.log(topic);\n        setFieldValue('time', topic.time);\n        setFieldValue('name', topic.name);\n        setFieldValue('categoryId', topic.categoryId);\n        setFieldValue('status', topic.status);\n        setFieldValue('total', topic.total);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchTopic();\n  }, [id, setFieldValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Sua de thi || CMS\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"2xl\",\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          mb: 5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Sua de thi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: RouterLink,\n            to: \"/dashboard/topic\",\n            children: \"Danh sach de thi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n            value: formik,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                mb: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"name\",\n                  fullWidth: true,\n                  label: \"Nh\\u1EADp t\\xEAn \\u0111\\u1EC1 thi\",\n                  ...getFieldProps('name'),\n                  error: Boolean(touched.name && errors.name),\n                  helperText: touched.name && errors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                mb: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  autoComplete: \"time\",\n                  fullWidth: true,\n                  label: \"Nh\\u1EADp thoi gian\",\n                  ...getFieldProps('time'),\n                  error: Boolean(touched.time && errors.time),\n                  helperText: touched.time && errors.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                mb: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"total\",\n                  fullWidth: true,\n                  label: \"Nh\\u1EADp so cau\",\n                  ...getFieldProps('total'),\n                  error: Boolean(touched.total && errors.total),\n                  helperText: touched.total && errors.total\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                mb: 3,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  variant: \"outlined\",\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"Category\",\n                    children: \"Danh m\\u1EE5c\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"Category\",\n                    id: \"Category\",\n                    defaultValue: \"\",\n                    label: \"Danh m\\u1EE5c\",\n                    ...getFieldProps('categoryId'),\n                    error: Boolean(touched.categoryId && errors.categoryId),\n                    children: categoryList.map((category, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: category._id,\n                      children: category.title\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this), Boolean(touched.categoryId && errors.categoryId) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    error: Boolean(touched.categoryId && errors.categoryId),\n                    children: touched.categoryId && errors.categoryId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                mb: 5,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  variant: \"outlined\",\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"status\",\n                    children: \"Tr\\u1EA1ng th\\xE1i\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"status\",\n                    id: \"status\",\n                    defaultValue: \"\",\n                    label: \"Tr\\u1EA1ng th\\xE1i\",\n                    ...getFieldProps('status'),\n                    error: Boolean(touched.status && errors.status),\n                    children: STATUS_LIST.map((status, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: status.value,\n                      children: status.lable\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this), Boolean(touched.status && errors.status) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    error: Boolean(touched.status && errors.status),\n                    children: touched.status && errors.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                size: \"large\",\n                variant: \"contained\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditTopic, \"4eEvsRmNsOnSeJCmkQU9umUPEpE=\", false, function () {\n  return [useHistory, useParams, useFormik];\n});\n\n_c = EditTopic;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTopic\");","map":{"version":3,"sources":["/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Topic/pages/Edit.js"],"names":["Button","Container","FormControl","FormHelperText","InputLabel","MenuItem","Select","Stack","TextField","Typography","categoryApi","topicApi","Page","STATUS_LIST","Form","FormikProvider","useFormik","React","useEffect","useState","Link","RouterLink","useHistory","useParams","toast","Yup","EditTopic","history","id","categoryList","setCategoryList","TopicSchema","object","shape","name","string","required","min","time","number","total","categoryId","status","formik","initialValues","validationSchema","onSubmit","values","update","success","push","error","console","log","handleSubmit","touched","errors","getFieldProps","setFieldValue","fetchListCategory","res","getList","data","response","fetchTopic","getById","topic","Boolean","map","category","index","_id","title","value","lable"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport categoryApi from 'apis/categoryApi';\nimport topicApi from 'apis/topicApi';\nimport Page from 'components/Page';\nimport { STATUS_LIST } from 'constants/index';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink, useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\n\nexport const EditTopic = () => {\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [categoryList, setCategoryList] = useState([]);\n\n  const TopicSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Vui lòng nhập tên đề thi')\n      .min(4, 'Tên đề thi chứa ít nhất 4 kí tư'),\n    time: Yup.number('Vui long nhap dung ding dang').required('Vui lòng nhập thời gian làm bài'),\n    total: Yup.number('Vui long nhap dung ding dang').required(\n      'Vui lòng nhập tổng số câu của bài thi'\n    ),\n    categoryId: Yup.string().required('Vui lòng chọn danh mục'),\n    status: Yup.string().required('Vui lòng chọn trạng thái đề thi')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      time: 0,\n      total: 0,\n      categoryId: '',\n      status: ''\n    },\n    validationSchema: TopicSchema,\n    onSubmit: async (values) => {\n      try {\n        await topicApi.update(id, values);\n        toast.success('Sua de thi thanh cong');\n        history.push('/dashboard/topic');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  });\n  const { handleSubmit, touched, errors, getFieldProps, setFieldValue } = formik;\n\n  useEffect(() => {\n    const fetchListCategory = async () => {\n      try {\n        const res = await categoryApi.getList();\n        setCategoryList(res.data.categoryList);\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    };\n    fetchListCategory();\n  }, []);\n  useEffect(() => {\n    const fetchTopic = async () => {\n      try {\n        const res = await topicApi.getById(id);\n        const { topic } = res.data;\n        console.log(topic);\n        setFieldValue('time', topic.time);\n        setFieldValue('name', topic.name);\n        setFieldValue('categoryId', topic.categoryId);\n        setFieldValue('status', topic.status);\n        setFieldValue('total', topic.total);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTopic();\n  }, [id, setFieldValue]);\n  return (\n    <>\n      <Page title=\"Sua de thi || CMS\">\n        <Container maxWidth=\"2xl\">\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n            <Typography variant=\"h4\" gutterBottom>\n              Sua de thi\n            </Typography>\n            <Button variant=\"contained\" component={RouterLink} to=\"/dashboard/topic\">\n              Danh sach de thi\n            </Button>\n          </Stack>\n          <Stack>\n            <FormikProvider value={formik}>\n              <Form onSubmit={handleSubmit}>\n                <Stack mb={3}>\n                  <TextField\n                    autoComplete=\"name\"\n                    fullWidth\n                    label=\"Nhập tên đề thi\"\n                    {...getFieldProps('name')}\n                    error={Boolean(touched.name && errors.name)}\n                    helperText={touched.name && errors.name}\n                  />\n                </Stack>\n                <Stack mb={3}>\n                  <TextField\n                    type=\"number\"\n                    autoComplete=\"time\"\n                    fullWidth\n                    label=\"Nhập thoi gian\"\n                    {...getFieldProps('time')}\n                    error={Boolean(touched.time && errors.time)}\n                    helperText={touched.time && errors.time}\n                  />\n                </Stack>\n                <Stack mb={3}>\n                  <TextField\n                    autoComplete=\"total\"\n                    fullWidth\n                    label=\"Nhập so cau\"\n                    {...getFieldProps('total')}\n                    error={Boolean(touched.total && errors.total)}\n                    helperText={touched.total && errors.total}\n                  />\n                </Stack>\n                <Stack mb={3}>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel id=\"Category\">Danh mục</InputLabel>\n                    <Select\n                      labelId=\"Category\"\n                      id=\"Category\"\n                      defaultValue=\"\"\n                      label=\"Danh mục\"\n                      {...getFieldProps('categoryId')}\n                      error={Boolean(touched.categoryId && errors.categoryId)}\n                    >\n                      {categoryList.map((category, index) => (\n                        <MenuItem key={index} value={category._id}>\n                          {category.title}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    {Boolean(touched.categoryId && errors.categoryId) && (\n                      <FormHelperText error={Boolean(touched.categoryId && errors.categoryId)}>\n                        {touched.categoryId && errors.categoryId}\n                      </FormHelperText>\n                    )}\n                  </FormControl>\n                </Stack>\n                <Stack mb={5}>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel id=\"status\">Trạng thái</InputLabel>\n                    <Select\n                      labelId=\"status\"\n                      id=\"status\"\n                      defaultValue=\"\"\n                      label=\"Trạng thái\"\n                      {...getFieldProps('status')}\n                      error={Boolean(touched.status && errors.status)}\n                    >\n                      {STATUS_LIST.map((status, index) => (\n                        <MenuItem value={status.value} key={index}>\n                          {status.lable}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    {Boolean(touched.status && errors.status) && (\n                      <FormHelperText error={Boolean(touched.status && errors.status)}>\n                        {touched.status && errors.status}\n                      </FormHelperText>\n                    )}\n                  </FormControl>\n                </Stack>\n\n                <Button type=\"submit\" size=\"large\" variant=\"contained\">\n                  Save\n                </Button>\n              </Form>\n            </FormikProvider>\n          </Stack>\n        </Container>\n      </Page>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}