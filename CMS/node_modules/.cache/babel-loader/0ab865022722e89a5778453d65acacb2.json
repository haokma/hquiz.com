{"ast":null,"code":"var _jsxFileName = \"/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/User/pages/Edit.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, FormControl, FormHelperText, InputLabel, MenuItem, Select, Stack, TextField, Typography } from '@material-ui/core';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport authApi from 'apis/authApi';\nimport Page from 'components/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditUser = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const UserSchema = Yup.object().shape({\n    name: Yup.string().required('Vui lòng nhập tên người dùng').min(4, 'Tên người dùng chưa ít nhât 4 kí tự'),\n    role: Yup.string().required('Vui lòng chọn chức vụ'),\n    status: Yup.string().required('Vui lòng chọn trạng thái tài khoản')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      status: '',\n      role: '',\n      email: ''\n    },\n    validationSchema: UserSchema,\n    onSubmit: async values => {\n      authApi.update(id, values).then(() => {\n        history.push('/dashboard/user');\n        toast.success('Sửa thông tin tài khoản thành công');\n      }).catch(err => toast.error(err));\n    }\n  });\n  const {\n    handleSubmit,\n    getFieldProps,\n    touched,\n    errors,\n    values,\n    setFieldValue\n  } = formik;\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = authApi.getById(id);\n        const {\n          user\n        } = res.data;\n        setFieldValue('name', user.name);\n        setFieldValue('role', user.role);\n        setFieldValue('email', user.email);\n        setFieldValue('status', user.status);\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    };\n\n    fetchUser();\n  }, [id, setFieldValue]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"S\\u1EE7a | CMS\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"2xl\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: 5,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"S\\u1EEDa th\\xF4ng tin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: RouterLink,\n          to: \"/dashboard/user\",\n          children: \"Danh s\\xE1ch T\\xE0i kho\\u1EA3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            mb: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              autoComplete: \"name\",\n              type: \"text\",\n              label: \"T\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng\",\n              ...getFieldProps('name'),\n              error: Boolean(touched.name && errors.name),\n              helperText: touched.name && errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            mb: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              autoComplete: \"email\",\n              type: \"text\",\n              label: \"Email\",\n              ...getFieldProps('email'),\n              value: values.email,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            mb: 5,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"status\",\n                children: \"Tr\\u1EA1ng th\\xE1i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"status\",\n                id: \"status\",\n                defaultValue: values.status,\n                label: \"Tr\\u1EA1ng th\\xE1i\",\n                ...getFieldProps('status'),\n                error: Boolean(touched.status && errors.status),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"ACTIVE\",\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"DISABLE\",\n                  children: \"Disable\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), Boolean(touched.status && errors.status) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: Boolean(touched.status && errors.status),\n                children: touched.status && errors.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            mb: 5,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"role\",\n                children: \"Ch\\u1EE9c v\\u1EE5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"role\",\n                id: \"role\",\n                defaultValue: values.role,\n                label: \"Ch\\u1EE9c v\\u1EE5\",\n                ...getFieldProps('role'),\n                error: Boolean(touched.role && errors.role),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"USER\",\n                  children: \"User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"ADMIN\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), Boolean(touched.role && errors.role) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: Boolean(touched.role && errors.role),\n                children: touched.role && errors.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            type: \"submit\",\n            children: \"L\\u01B0u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUser, \"3M/rpLKdULbYHNnoE+Mg0N5G7do=\", false, function () {\n  return [useHistory, useParams, useFormik];\n});\n\n_c = EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/User/pages/Edit.js"],"names":["Button","Container","FormControl","FormHelperText","InputLabel","MenuItem","Select","Stack","TextField","Typography","Form","FormikProvider","useFormik","React","useEffect","useHistory","useParams","Link","RouterLink","toast","Yup","authApi","Page","EditUser","history","id","UserSchema","object","shape","name","string","required","min","role","status","formik","initialValues","email","validationSchema","onSubmit","values","update","then","push","success","catch","err","error","handleSubmit","getFieldProps","touched","errors","setFieldValue","fetchUser","res","getById","user","data","response","Boolean"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport authApi from 'apis/authApi';\nimport Page from 'components/Page';\n\nexport const EditUser = () => {\n  const history = useHistory();\n  const { id } = useParams();\n\n  const UserSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Vui lòng nhập tên người dùng')\n      .min(4, 'Tên người dùng chưa ít nhât 4 kí tự'),\n    role: Yup.string().required('Vui lòng chọn chức vụ'),\n    status: Yup.string().required('Vui lòng chọn trạng thái tài khoản')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      status: '',\n      role: '',\n      email: ''\n    },\n    validationSchema: UserSchema,\n    onSubmit: async (values) => {\n      authApi\n        .update(id, values)\n        .then(() => {\n          history.push('/dashboard/user');\n          toast.success('Sửa thông tin tài khoản thành công');\n        })\n        .catch((err) => toast.error(err));\n    }\n  });\n  const { handleSubmit, getFieldProps, touched, errors, values, setFieldValue } = formik;\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = authApi.getById(id);\n        const { user } = res.data;\n        setFieldValue('name', user.name);\n        setFieldValue('role', user.role);\n        setFieldValue('email', user.email);\n        setFieldValue('status', user.status);\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    };\n    fetchUser();\n  }, [id, setFieldValue]);\n  return (\n    <Page title=\"Sủa | CMS\">\n      <Container maxWidth=\"2xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            Sửa thông tin\n          </Typography>\n          <Button variant=\"contained\" component={RouterLink} to=\"/dashboard/user\">\n            Danh sách Tài khoản\n          </Button>\n        </Stack>\n        <FormikProvider value={formik}>\n          <Form onSubmit={handleSubmit}>\n            <Stack mb={5}>\n              <TextField\n                fullWidth\n                autoComplete=\"name\"\n                type=\"text\"\n                label=\"Tên người dùng\"\n                {...getFieldProps('name')}\n                error={Boolean(touched.name && errors.name)}\n                helperText={touched.name && errors.name}\n              />\n            </Stack>\n            <Stack mb={5}>\n              <TextField\n                fullWidth\n                autoComplete=\"email\"\n                type=\"text\"\n                label=\"Email\"\n                {...getFieldProps('email')}\n                value={values.email}\n                disabled\n              />\n            </Stack>\n            <Stack mb={5}>\n              <FormControl variant=\"outlined\">\n                <InputLabel id=\"status\">Trạng thái</InputLabel>\n                <Select\n                  labelId=\"status\"\n                  id=\"status\"\n                  defaultValue={values.status}\n                  label=\"Trạng thái\"\n                  {...getFieldProps('status')}\n                  error={Boolean(touched.status && errors.status)}\n                >\n                  <MenuItem value=\"ACTIVE\">Active</MenuItem>\n                  <MenuItem value=\"DISABLE\">Disable</MenuItem>\n                </Select>\n                {Boolean(touched.status && errors.status) && (\n                  <FormHelperText error={Boolean(touched.status && errors.status)}>\n                    {touched.status && errors.status}\n                  </FormHelperText>\n                )}\n              </FormControl>\n            </Stack>\n            <Stack mb={5}>\n              <FormControl variant=\"outlined\">\n                <InputLabel id=\"role\">Chức vụ</InputLabel>\n                <Select\n                  labelId=\"role\"\n                  id=\"role\"\n                  defaultValue={values.role}\n                  label=\"Chức vụ\"\n                  {...getFieldProps('role')}\n                  error={Boolean(touched.role && errors.role)}\n                >\n                  <MenuItem value=\"USER\">User</MenuItem>\n                  <MenuItem value=\"ADMIN\">Admin</MenuItem>\n                </Select>\n                {Boolean(touched.role && errors.role) && (\n                  <FormHelperText error={Boolean(touched.role && errors.role)}>\n                    {touched.role && errors.role}\n                  </FormHelperText>\n                )}\n              </FormControl>\n            </Stack>\n            <Button variant=\"contained\" size=\"large\" type=\"submit\">\n              Lưu\n            </Button>\n          </Form>\n        </FormikProvider>\n      </Container>\n    </Page>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}