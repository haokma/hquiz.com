{"ast":null,"code":"var _jsxFileName = \"/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Category/pages/Create.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, FormControl, InputLabel, MenuItem, Select, Stack, TextField, Typography } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\nimport categoryApi from 'apis/categoryApi';\nimport Page from 'components/Page';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateCategory = () => {\n  _s();\n\n  const [categoryList, setCategoryList] = useState([]);\n  const categorySchema = Yup.object().shape({\n    title: Yup.string().required('Vui lòng nhập tên dang mục').min(4, 'Tên danh mục chứa ít nhất 4 kí tư'),\n    description: Yup.string().required('Vui lòng nhập miêu tả danh mục').min(4, 'Miêu tả danh mục chứa ít nhất 4 kí tư')\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      parentId: '',\n      description: ''\n    },\n    validationSchema: categorySchema,\n    onSubmit: async values => {\n      try {\n        console.log(values);\n        await categoryApi.create(values);\n        toast.success('Thêm danh mục thành công');\n        resetForm();\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    }\n  });\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    getFieldProps,\n    resetForm,\n    setFieldValue\n  } = formik;\n  const fetchCategoryList = useCallback(async () => {\n    try {\n      const res = await categoryApi.getList({\n        limit: 100\n      });\n      const {\n        categories\n      } = res.data;\n      setCategoryList(categories);\n    } catch (error) {\n      toast.error(error.response.data.error);\n      setCategoryList([]);\n    }\n  }, []);\n  useEffect(() => {\n    fetchCategoryList();\n  }, [fetchCategoryList]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"T\\u1EA1o danh m\\u1EE5c | CMS\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: 5,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"T\\u1EA1o Danh M\\u1EE5c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: RouterLink,\n          to: \"/dashboard/category\",\n          children: \"Danh s\\xE1ch Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            mb: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              autoComplete: \"title\",\n              type: \"text\",\n              label: \"Nh\\u1EADp t\\xEAn danh m\\u1EE5c\",\n              ...getFieldProps('title'),\n              error: Boolean(touched.title && errors.title),\n              helperText: touched.title && errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            mb: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              autoComplete: \"description\",\n              type: \"text\",\n              label: \"Nh\\u1EADp t\\xEAn danh m\\u1EE5c\",\n              ...getFieldProps('description'),\n              error: Boolean(touched.description && errors.description),\n              helperText: touched.description && errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            mb: 5,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"category\",\n                children: \"Danh m\\u1EE5c cha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                defaultValue: \"\",\n                labelId: \"category\",\n                id: \"category\",\n                label: \"Danh m\\u1EE5c cha\",\n                onChange: event => setFieldValue('parentId', event.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Tr\\u1ED1ng\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), categoryList.map((category, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category._id,\n                  children: category.title\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            loading: false,\n            children: \"T\\u1EA1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateCategory, \"KOSq2VeCjeWz2WIz1jjbi2XJ9GU=\", false, function () {\n  return [useFormik];\n});\n\n_c = CreateCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"sources":["/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Category/pages/Create.js"],"names":["Button","Container","FormControl","InputLabel","MenuItem","Select","Stack","TextField","Typography","LoadingButton","categoryApi","Page","Form","FormikProvider","useFormik","React","useCallback","useEffect","useState","Link","RouterLink","toast","Yup","CreateCategory","categoryList","setCategoryList","categorySchema","object","shape","title","string","required","min","description","formik","initialValues","parentId","validationSchema","onSubmit","values","console","log","create","success","resetForm","error","response","data","errors","touched","handleSubmit","getFieldProps","setFieldValue","fetchCategoryList","res","getList","limit","categories","Boolean","event","target","value","map","category","index","_id"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Container,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\nimport categoryApi from 'apis/categoryApi';\nimport Page from 'components/Page';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\n\nexport const CreateCategory = () => {\n  const [categoryList, setCategoryList] = useState([]);\n\n  const categorySchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Vui lòng nhập tên dang mục')\n      .min(4, 'Tên danh mục chứa ít nhất 4 kí tư'),\n    description: Yup.string()\n      .required('Vui lòng nhập miêu tả danh mục')\n      .min(4, 'Miêu tả danh mục chứa ít nhất 4 kí tư')\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      parentId: '',\n      description: ''\n    },\n    validationSchema: categorySchema,\n    onSubmit: async (values) => {\n      try {\n        console.log(values);\n        await categoryApi.create(values);\n        toast.success('Thêm danh mục thành công');\n        resetForm();\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    }\n  });\n  const { errors, touched, handleSubmit, getFieldProps, resetForm, setFieldValue } = formik;\n  const fetchCategoryList = useCallback(async () => {\n    try {\n      const res = await categoryApi.getList({ limit: 100 });\n      const { categories } = res.data;\n      setCategoryList(categories);\n    } catch (error) {\n      toast.error(error.response.data.error);\n      setCategoryList([]);\n    }\n  }, []);\n  useEffect(() => {\n    fetchCategoryList();\n  }, [fetchCategoryList]);\n  return (\n    <Page title=\"Tạo danh mục | CMS\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            Tạo Danh Mục\n          </Typography>\n          <Button variant=\"contained\" component={RouterLink} to=\"/dashboard/category\">\n            Danh sách Category\n          </Button>\n        </Stack>\n\n        <FormikProvider value={formik}>\n          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n            <Stack mb={3}>\n              <TextField\n                fullWidth\n                autoComplete=\"title\"\n                type=\"text\"\n                label=\"Nhập tên danh mục\"\n                {...getFieldProps('title')}\n                error={Boolean(touched.title && errors.title)}\n                helperText={touched.title && errors.title}\n              />\n            </Stack>\n            <Stack mb={3}>\n              <TextField\n                fullWidth\n                autoComplete=\"description\"\n                type=\"text\"\n                label=\"Nhập tên danh mục\"\n                {...getFieldProps('description')}\n                error={Boolean(touched.description && errors.description)}\n                helperText={touched.description && errors.description}\n              />\n            </Stack>\n            <Stack mb={5}>\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel id=\"category\">Danh mục cha</InputLabel>\n                <Select\n                  defaultValue=\"\"\n                  labelId=\"category\"\n                  id=\"category\"\n                  label=\"Danh mục cha\"\n                  onChange={(event) => setFieldValue('parentId', event.target.value)}\n                >\n                  <MenuItem value=\"\">\n                    <em>Trống</em>\n                  </MenuItem>\n                  {categoryList.map((category, index) => (\n                    <MenuItem value={category._id} key={index}>\n                      {category.title}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Stack>\n            <LoadingButton size=\"large\" type=\"submit\" variant=\"contained\" loading={false}>\n              Tạo\n            </LoadingButton>\n          </Form>\n        </FormikProvider>\n      </Container>\n    </Page>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}