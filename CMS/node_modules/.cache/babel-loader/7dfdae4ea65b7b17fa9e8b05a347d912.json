{"ast":null,"code":"var _jsxFileName = \"/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Topic/pages/Create.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, FormControl, FormHelperText, InputLabel, MenuItem, Select, Stack, TextField, Typography } from '@material-ui/core';\nimport categoryApi from 'apis/categoryApi';\nimport topicApi from 'apis/topicApi';\nimport Page from 'components/Page';\nimport { STATUS_LIST } from 'constants/index';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateTopic = () => {\n  _s();\n\n  const [categroyList, setCategoryList] = useState([]);\n  const TopicSchema = Yup.object().shape({\n    name: Yup.string().required('Vui lòng nhập tên đề thi').min(4, 'Tên đề thi chứa ít nhất 4 kí tư'),\n    description: Yup.string().required('Vui lòng nhập miêu tả đề thi').min(4, 'Miêu tả đề thi chứa ít nhất 4 kí tư'),\n    time: Yup.number().required('Vui lòng nhập thời gian làm bài'),\n    total: Yup.number().required('Vui lòng nhập tổng số câu của bài thi'),\n    categoryId: Yup.string().required('Vui lòng chọn danh mục'),\n    status: Yup.string().required('Vui lòng chọn trạng thái đề thi')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      time: undefined,\n      categoryId: '',\n      total: undefined,\n      status: '',\n      description: ''\n    },\n    validationSchema: TopicSchema,\n    onSubmit: async values => {\n      try {\n        await topicApi.create(values);\n        toast.success('Tạo đề thi thành công');\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    }\n  });\n  const {\n    handleSubmit,\n    touched,\n    errors,\n    values,\n    getFieldProps\n  } = formik;\n  useEffect(() => {\n    const fetchListCategory = async () => {\n      try {\n        const res = await categoryApi.getSubList();\n        setCategoryList(res.data.category);\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    };\n\n    fetchListCategory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      title: \"T\\u1EA1o \\u0111\\u1EC1 thi | CMS\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"2xl\",\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          mb: 5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"T\\u1EA1o \\u0111\\u1EC1 thi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: RouterLink,\n            to: \"/dashboard/topic\",\n            children: \"Danh s\\xE1ch \\u0111\\u1EC1 thi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n          value: formik,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"name\",\n                fullWidth: true,\n                label: \"Nh\\u1EADp t\\xEAn \\u0111\\u1EC1 thi\",\n                ...getFieldProps('name'),\n                error: Boolean(touched.name && errors.name),\n                helperText: touched.name && errors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"description\",\n                fullWidth: true,\n                label: \"Nh\\u1EADp mi\\xEAu t\\u1EA3 \\u0111\\u1EC1 thi\",\n                ...getFieldProps('description'),\n                error: Boolean(touched.description && errors.description),\n                helperText: touched.description && errors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Nh\\u1EADp th\\u1EDDi gian\",\n                type: \"number\",\n                ...getFieldProps('time'),\n                error: Boolean(touched.time && errors.time),\n                helperText: touched.time && errors.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Nh\\u1EADp t\\u1ED5ng s\\u1ED1 c\\xE2u\",\n                type: \"number\",\n                ...getFieldProps('total'),\n                error: Boolean(touched.total && errors.total),\n                helperText: touched.total && errors.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"Category\",\n                  children: \"Danh m\\u1EE5c\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"Category\",\n                  id: \"Category\",\n                  defaultValue: values.categoryId,\n                  label: \"Danh m\\u1EE5c\",\n                  ...getFieldProps('categoryId'),\n                  error: Boolean(touched.categoryId && errors.categoryId),\n                  children: categroyList.map((category, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: category._id,\n                    children: category.title\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this), Boolean(touched.categoryId && errors.categoryId) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: Boolean(touched.categoryId && errors.categoryId),\n                  children: touched.categoryId && errors.categoryId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              mb: 5,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"status\",\n                  children: \"Tr\\u1EA1ng th\\xE1i\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"status\",\n                  id: \"status\",\n                  defaultValue: values.status,\n                  label: \"Tr\\u1EA1ng th\\xE1i\",\n                  ...getFieldProps('status'),\n                  error: Boolean(touched.status && errors.status),\n                  children: STATUS_LIST.map((status, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: status.value,\n                    children: status.lable\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), Boolean(touched.status && errors.status) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: Boolean(touched.status && errors.status),\n                  children: touched.status && errors.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              children: \"T\\u1EA1o \\u0111\\u1EC1 thi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateTopic, \"BlbZyzK+KBuqk87GIFWpSVk8h9o=\", false, function () {\n  return [useFormik];\n});\n\n_c = CreateTopic;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTopic\");","map":{"version":3,"sources":["/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Topic/pages/Create.js"],"names":["Button","Container","FormControl","FormHelperText","InputLabel","MenuItem","Select","Stack","TextField","Typography","categoryApi","topicApi","Page","STATUS_LIST","Form","FormikProvider","useFormik","React","useEffect","useState","Link","RouterLink","toast","Yup","CreateTopic","categroyList","setCategoryList","TopicSchema","object","shape","name","string","required","min","description","time","number","total","categoryId","status","formik","initialValues","undefined","validationSchema","onSubmit","values","create","success","error","response","data","handleSubmit","touched","errors","getFieldProps","fetchListCategory","res","getSubList","category","Boolean","map","index","_id","title","value","lable"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport categoryApi from 'apis/categoryApi';\nimport topicApi from 'apis/topicApi';\nimport Page from 'components/Page';\nimport { STATUS_LIST } from 'constants/index';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\n\nexport const CreateTopic = () => {\n  const [categroyList, setCategoryList] = useState([]);\n\n  const TopicSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Vui lòng nhập tên đề thi')\n      .min(4, 'Tên đề thi chứa ít nhất 4 kí tư'),\n    description: Yup.string()\n      .required('Vui lòng nhập miêu tả đề thi')\n      .min(4, 'Miêu tả đề thi chứa ít nhất 4 kí tư'),\n    time: Yup.number().required('Vui lòng nhập thời gian làm bài'),\n    total: Yup.number().required('Vui lòng nhập tổng số câu của bài thi'),\n    categoryId: Yup.string().required('Vui lòng chọn danh mục'),\n    status: Yup.string().required('Vui lòng chọn trạng thái đề thi')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      time: undefined,\n      categoryId: '',\n      total: undefined,\n      status: '',\n      description: ''\n    },\n    validationSchema: TopicSchema,\n    onSubmit: async (values) => {\n      try {\n        await topicApi.create(values);\n        toast.success('Tạo đề thi thành công');\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    }\n  });\n\n  const { handleSubmit, touched, errors, values, getFieldProps } = formik;\n\n  useEffect(() => {\n    const fetchListCategory = async () => {\n      try {\n        const res = await categoryApi.getSubList();\n        setCategoryList(res.data.category);\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    };\n    fetchListCategory();\n  }, []);\n\n  return (\n    <>\n      <Page title=\"Tạo đề thi | CMS\">\n        <Container maxWidth=\"2xl\">\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n            <Typography variant=\"h4\" gutterBottom>\n              Tạo đề thi\n            </Typography>\n            <Button variant=\"contained\" component={RouterLink} to=\"/dashboard/topic\">\n              Danh sách đề thi\n            </Button>\n          </Stack>\n          <FormikProvider value={formik}>\n            <Form onSubmit={handleSubmit}>\n              <Stack mb={3}>\n                <TextField\n                  autoComplete=\"name\"\n                  fullWidth\n                  label=\"Nhập tên đề thi\"\n                  {...getFieldProps('name')}\n                  error={Boolean(touched.name && errors.name)}\n                  helperText={touched.name && errors.name}\n                />\n              </Stack>\n              <Stack mb={3}>\n                <TextField\n                  autoComplete=\"description\"\n                  fullWidth\n                  label=\"Nhập miêu tả đề thi\"\n                  {...getFieldProps('description')}\n                  error={Boolean(touched.description && errors.description)}\n                  helperText={touched.description && errors.description}\n                />\n              </Stack>\n              <Stack mb={3}>\n                <TextField\n                  fullWidth\n                  label=\"Nhập thời gian\"\n                  type=\"number\"\n                  {...getFieldProps('time')}\n                  error={Boolean(touched.time && errors.time)}\n                  helperText={touched.time && errors.time}\n                />\n              </Stack>\n              <Stack mb={3}>\n                <TextField\n                  fullWidth\n                  label=\"Nhập tổng số câu\"\n                  type=\"number\"\n                  {...getFieldProps('total')}\n                  error={Boolean(touched.total && errors.total)}\n                  helperText={touched.total && errors.total}\n                />\n              </Stack>\n              <Stack mb={3}>\n                <FormControl variant=\"outlined\">\n                  <InputLabel id=\"Category\">Danh mục</InputLabel>\n                  <Select\n                    labelId=\"Category\"\n                    id=\"Category\"\n                    defaultValue={values.categoryId}\n                    label=\"Danh mục\"\n                    {...getFieldProps('categoryId')}\n                    error={Boolean(touched.categoryId && errors.categoryId)}\n                  >\n                    {categroyList.map((category, index) => (\n                      <MenuItem key={index} value={category._id}>\n                        {category.title}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {Boolean(touched.categoryId && errors.categoryId) && (\n                    <FormHelperText error={Boolean(touched.categoryId && errors.categoryId)}>\n                      {touched.categoryId && errors.categoryId}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Stack>\n              <Stack mb={5}>\n                <FormControl variant=\"outlined\">\n                  <InputLabel id=\"status\">Trạng thái</InputLabel>\n                  <Select\n                    labelId=\"status\"\n                    id=\"status\"\n                    defaultValue={values.status}\n                    label=\"Trạng thái\"\n                    {...getFieldProps('status')}\n                    error={Boolean(touched.status && errors.status)}\n                  >\n                    {STATUS_LIST.map((status, index) => (\n                      <MenuItem value={status.value} key={index}>\n                        {status.lable}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {Boolean(touched.status && errors.status) && (\n                    <FormHelperText error={Boolean(touched.status && errors.status)}>\n                      {touched.status && errors.status}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Stack>\n              <Button type=\"submit\" variant=\"contained\" size=\"large\">\n                Tạo đề thi\n              </Button>\n            </Form>\n          </FormikProvider>\n        </Container>\n      </Page>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}