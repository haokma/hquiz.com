{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport authReducer from 'features/Auth/authSlice';\nimport userReducer from 'features/User/userSlice';\nimport { history } from 'utils/history';\nimport rootSaga from './rootSaga';\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  user: userReducer,\n  auth: authReducer\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware, routerMiddleware(history))\n});\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/app/store.js"],"names":["combineReducers","configureStore","connectRouter","routerMiddleware","createSagaMiddleware","authReducer","userReducer","history","rootSaga","rootReducer","router","user","auth","sagaMiddleware","store","reducer","middleware","getDefaultMiddleware","concat","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,MAAM,EAAER,aAAa,CAACK,OAAD,CADa;AAElCI,EAAAA,IAAI,EAAEL,WAF4B;AAGlCM,EAAAA,IAAI,EAAEP;AAH4B,CAAD,CAAnC;AAMA,MAAMQ,cAAc,GAAGT,oBAAoB,EAA3C;AAEA,MAAMU,KAAK,GAAGb,cAAc,CAAC;AAC3Bc,EAAAA,OAAO,EAAEN,WADkB;AAE3BO,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,GAAGC,MAAvB,CAA8BL,cAA9B,EAA8CV,gBAAgB,CAACI,OAAD,CAA9D;AAHyB,CAAD,CAA5B;AAMAM,cAAc,CAACM,GAAf,CAAmBX,QAAnB;AAEA,eAAeM,KAAf","sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport authReducer from 'features/Auth/authSlice';\nimport userReducer from 'features/User/userSlice';\nimport { history } from 'utils/history';\nimport rootSaga from './rootSaga';\n\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  user: userReducer,\n  auth: authReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(sagaMiddleware, routerMiddleware(history))\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}