{"ast":null,"code":"import axios from 'axios';\nimport { URL_API } from '../constants';\nconst axiosClients = axios.create({\n  baseURL: `${URL_API}`\n});\naxiosClients.interceptors.request.use(function config(config) {\n  const token = JSON.parse(localStorage.getItem('token'));\n  config.headers.Authorization = `Beared ${token}`;\n  return config;\n}, function error(error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function response(response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  return response.data;\n}, function error(error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  throw error;\n});\nexport default axiosClients;","map":{"version":3,"sources":["/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/apis/axiosClients.js"],"names":["axios","URL_API","axiosClients","create","baseURL","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","headers","Authorization","error","Promise","reject","response","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,YAAY,GAAGF,KAAK,CAACG,MAAN,CAAa;AAChCC,EAAAA,OAAO,EAAG,GAAEH,OAAQ;AADY,CAAb,CAArB;AAGAC,YAAY,CAACG,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CACE,SAASC,MAAT,CAAgBA,MAAhB,EAAwB;AACtB,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd;AACAL,EAAAA,MAAM,CAACM,OAAP,CAAeC,aAAf,GAAgC,UAASN,KAAM,EAA/C;AACA,SAAOD,MAAP;AACD,CALH,EAME,SAASQ,KAAT,CAAeA,KAAf,EAAsB;AACpB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CATH;AAYAhB,KAAK,CAACK,YAAN,CAAmBc,QAAnB,CAA4BZ,GAA5B,CACE,SAASY,QAAT,CAAkBA,QAAlB,EAA4B;AAC1B;AACA;AACA,SAAOA,QAAQ,CAACC,IAAhB;AACD,CALH,EAME,SAASJ,KAAT,CAAeA,KAAf,EAAsB;AACpB;AACA;AACA,QAAMA,KAAN;AACD,CAVH;AAYA,eAAed,YAAf","sourcesContent":["import axios from 'axios';\nimport { URL_API } from '../constants';\n\nconst axiosClients = axios.create({\n  baseURL: `${URL_API}`\n});\naxiosClients.interceptors.request.use(\n  function config(config) {\n    const token = JSON.parse(localStorage.getItem('token'));\n    config.headers.Authorization = `Beared ${token}`;\n    return config;\n  },\n  function error(error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  function response(response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response.data;\n  },\n  function error(error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    throw error;\n  }\n);\nexport default axiosClients;\n"]},"metadata":{},"sourceType":"module"}