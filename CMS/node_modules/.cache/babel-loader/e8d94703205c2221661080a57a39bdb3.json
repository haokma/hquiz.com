{"ast":null,"code":"var _jsxFileName = \"/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Category/pages/Edit.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, FormControl, FormHelperText, InputLabel, MenuItem, Select, Stack, TextField, Typography } from '@material-ui/core';\nimport categoryApi from 'apis/categoryApi';\nimport Page from 'components/Page';\nimport { STATUS_LIST } from 'constants/index';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditCategory = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const categorySchema = Yup.object().shape({\n    title: Yup.string().required('Vui lòng nhập tên danh mục').min(4, 'Tên danh mục chứa ít nhất 4 kí tự'),\n    status: Yup.string().required('Vui lòng chọn trạng thái danh mục')\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      status: ''\n    },\n    validationSchema: categorySchema,\n    onSubmit: async values => {\n      try {\n        await categoryApi.update(id, values);\n        history.push('/dashboard/category');\n        toast.success('Sửa danh mục thành công');\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    }\n  });\n  const {\n    handleSubmit,\n    getFieldProps,\n    values,\n    setFieldValue,\n    touched,\n    errors\n  } = formik;\n  useEffect(() => {\n    const fetchCategoryById = async () => {\n      try {\n        const res = await categoryApi.getById(id);\n        const {\n          category\n        } = res.data;\n        setFieldValue('title', category.title);\n        setFieldValue('status', category.status);\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    };\n\n    fetchCategoryById();\n  }, [setFieldValue, id]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"S\\u1EEDa danh m\\u1EE5c | CMS\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: 5,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"S\\u1EEDa danh m\\u1EE5c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: RouterLink,\n          to: \"/dashboard/category\",\n          children: \"Danh s\\xE1ch Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              autoComplete: \"title\",\n              type: \"text\",\n              label: \"Nh\\u1EADp t\\xEAn danh m\\u1EE5c\",\n              ...getFieldProps('title'),\n              error: Boolean(touched.title && errors.title),\n              helperText: touched.title && errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            mb: 5,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"status\",\n                children: \"Tr\\u1EA1ng th\\xE1i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"status\",\n                id: \"status\",\n                defaultValue: values.status,\n                label: \"Tr\\u1EA1ng th\\xE1i\",\n                ...getFieldProps('status'),\n                error: Boolean(touched.status && errors.status),\n                children: STATUS_LIST.map((status, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: status.value,\n                  children: status.lable\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), Boolean(touched.status && errors.status) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: Boolean(touched.status && errors.status),\n                children: touched.status && errors.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"large\",\n            children: \"L\\u01B0u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditCategory, \"JouzjP5B4vTzUTRlv0i0zvZiX2g=\", false, function () {\n  return [useParams, useHistory, useFormik];\n});\n\n_c = EditCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCategory\");","map":{"version":3,"sources":["/home/haopc/Desktop/Workspace/hquiz.com/CMS/src/features/Category/pages/Edit.js"],"names":["Button","Container","FormControl","FormHelperText","InputLabel","MenuItem","Select","Stack","TextField","Typography","categoryApi","Page","STATUS_LIST","Form","FormikProvider","useFormik","React","useEffect","useHistory","useParams","Link","RouterLink","toast","Yup","EditCategory","id","history","categorySchema","object","shape","title","string","required","min","status","formik","initialValues","validationSchema","onSubmit","values","update","push","success","error","response","data","handleSubmit","getFieldProps","setFieldValue","touched","errors","fetchCategoryById","res","getById","category","Boolean","map","index","value","lable"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport categoryApi from 'apis/categoryApi';\nimport Page from 'components/Page';\nimport { STATUS_LIST } from 'constants/index';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport React, { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\n\nexport const EditCategory = () => {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const categorySchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Vui lòng nhập tên danh mục')\n      .min(4, 'Tên danh mục chứa ít nhất 4 kí tự'),\n    status: Yup.string().required('Vui lòng chọn trạng thái danh mục')\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      status: ''\n    },\n    validationSchema: categorySchema,\n    onSubmit: async (values) => {\n      try {\n        await categoryApi.update(id, values);\n        history.push('/dashboard/category');\n        toast.success('Sửa danh mục thành công');\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    }\n  });\n  const { handleSubmit, getFieldProps, values, setFieldValue, touched, errors } = formik;\n\n  useEffect(() => {\n    const fetchCategoryById = async () => {\n      try {\n        const res = await categoryApi.getById(id);\n        const { category } = res.data;\n        setFieldValue('title', category.title);\n        setFieldValue('status', category.status);\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    };\n    fetchCategoryById();\n  }, [setFieldValue, id]);\n\n  return (\n    <Page title=\"Sửa danh mục | CMS\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            Sửa danh mục\n          </Typography>\n          <Button variant=\"contained\" component={RouterLink} to=\"/dashboard/category\">\n            Danh sách Category\n          </Button>\n        </Stack>\n        <FormikProvider value={formik}>\n          <Form onSubmit={handleSubmit}>\n            <Stack mb={2}>\n              <TextField\n                fullWidth\n                autoComplete=\"title\"\n                type=\"text\"\n                label=\"Nhập tên danh mục\"\n                {...getFieldProps('title')}\n                error={Boolean(touched.title && errors.title)}\n                helperText={touched.title && errors.title}\n              />\n            </Stack>\n            <Stack mb={5}>\n              <FormControl variant=\"outlined\">\n                <InputLabel id=\"status\">Trạng thái</InputLabel>\n                <Select\n                  labelId=\"status\"\n                  id=\"status\"\n                  defaultValue={values.status}\n                  label=\"Trạng thái\"\n                  {...getFieldProps('status')}\n                  error={Boolean(touched.status && errors.status)}\n                >\n                  {STATUS_LIST.map((status, index) => (\n                    <MenuItem value={status.value} key={index}>\n                      {status.lable}\n                    </MenuItem>\n                  ))}\n                </Select>\n                {Boolean(touched.status && errors.status) && (\n                  <FormHelperText error={Boolean(touched.status && errors.status)}>\n                    {touched.status && errors.status}\n                  </FormHelperText>\n                )}\n              </FormControl>\n            </Stack>\n            <Button type=\"submit\" variant=\"contained\" size=\"large\">\n              Lưu\n            </Button>\n          </Form>\n        </FormikProvider>\n      </Container>\n    </Page>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}